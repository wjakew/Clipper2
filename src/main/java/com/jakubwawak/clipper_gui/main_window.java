/*
by Jakub Wawak
kubawawak@gmail.com
all rights reserved
*/
package com.jakubwawak.clipper_gui;

import com.jakubwawak.clipper.ClipBoardListener;
import com.jakubwawak.clipper.Container;
import com.jakubwawak.clipper.Snippet;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;

/**
 *Object for creating main window
 * @author jakubwawak
 */
public class main_window extends javax.swing.JFrame {

    /**
     * Creates new form main_window
     */
    Container container;
    ClipBoardListener clipboard_evt;
    DefaultListModel<String> dlm;
    
    int list_index;
    
    /**
     * Main constructor
     */
    public main_window() {
        initComponents();
        getContentPane().setBackground(Color.DARK_GRAY);
        this.setLocationRelativeTo(null);
        list_index = -1;
        load_window();
        
        container = new Container();
        clipboard_evt = new ClipBoardListener(container,list_snippet,dlm);
        
        Thread thread = new Thread(clipboard_evt);
        thread.start();

        setVisible(true);
        text_newsnippet.setFocusable(true);
    }
    
    /**
     * Function for loading window
     */
    void load_window(){
        dlm = new DefaultListModel();
        list_snippet.setModel(dlm);
    }
    
    /**
     * Function for loading list object
     */
    void load_list(){
        dlm = new DefaultListModel();
        
        for(Snippet snippet : container.container_list){
            dlm.addElement(snippet.get_glance());
        }
        list_snippet.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_snippet = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        text_newsnippet = new javax.swing.JTextArea();
        label_add = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_showdetails = new javax.swing.JMenuItem();
        menu_remove = new javax.swing.JMenuItem();
        menu_sendbyemail = new javax.swing.JMenuItem();
        menu_copysnippet = new javax.swing.JMenuItem();
        menu_options = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clipper2");

        list_snippet.setForeground(new java.awt.Color(255, 255, 0));
        list_snippet.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_snippet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_snippetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list_snippet);

        text_newsnippet.setColumns(20);
        text_newsnippet.setForeground(new java.awt.Color(255, 255, 51));
        text_newsnippet.setRows(5);
        text_newsnippet.setText("fast snippet...");
        text_newsnippet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_newsnippetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_newsnippetFocusLost(evt);
            }
        });
        text_newsnippet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_newsnippetKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(text_newsnippet);

        label_add.setBackground(new java.awt.Color(255, 255, 0));
        label_add.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        label_add.setForeground(new java.awt.Color(255, 255, 255));
        label_add.setText("Add");
        label_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_addMouseClicked(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setForeground(java.awt.Color.darkGray);
        jMenuBar1.setToolTipText("");

        jMenu1.setBackground(new java.awt.Color(51, 51, 51));
        jMenu1.setForeground(new java.awt.Color(255, 255, 0));
        jMenu1.setText("Actions");

        menu_showdetails.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_showdetails.setText("Show details");
        menu_showdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_showdetailsActionPerformed(evt);
            }
        });
        jMenu1.add(menu_showdetails);

        menu_remove.setText("Remove");
        jMenu1.add(menu_remove);

        menu_sendbyemail.setText("Send by email");
        jMenu1.add(menu_sendbyemail);

        menu_copysnippet.setText("Copy snippet");
        jMenu1.add(menu_copysnippet);

        jMenuBar1.add(jMenu1);

        menu_options.setBackground(new java.awt.Color(102, 102, 102));
        menu_options.setForeground(new java.awt.Color(255, 255, 0));
        menu_options.setText("Options");
        jMenuBar1.add(menu_options);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_add)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_add)
                        .addGap(37, 37, 37))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_newsnippetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_newsnippetFocusGained
        if(text_newsnippet.getText().equals("")){
            text_newsnippet.setText("fast snippet...");
        }
        else if ( text_newsnippet.getText().equals("fast snippet...")){
            text_newsnippet.setText("");
        }
    }//GEN-LAST:event_text_newsnippetFocusGained

    private void text_newsnippetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_newsnippetFocusLost
        if ( text_newsnippet.getText().equals("") ){
            text_newsnippet.setText("fast snippet...");
        }
    }//GEN-LAST:event_text_newsnippetFocusLost

    private void label_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_addMouseClicked
        if ( !text_newsnippet.getText().equals("") && !text_newsnippet.getText().equals("fast snippet...") ){
            container.add(text_newsnippet.getText());
            dlm.addElement(container.get_last().get_glance());
            list_snippet.setModel(dlm);
            text_newsnippet.setText("fast snippet..");
        }
    }//GEN-LAST:event_label_addMouseClicked

    private void text_newsnippetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_newsnippetKeyPressed
        if( evt.getKeyCode() == KeyEvent.VK_ENTER ){
            if ( !text_newsnippet.getText().equals("") && !text_newsnippet.getText().equals("fast snippet...") ){
                container.add(text_newsnippet.getText());
                dlm.addElement(container.get_last().get_glance());
                list_snippet.setModel(dlm);
                text_newsnippet.setText("fast snippet..");
            }
        }
    }//GEN-LAST:event_text_newsnippetKeyPressed

    private void list_snippetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_snippetMouseClicked
        list_index = list_snippet.getSelectedIndex();
        System.out.println("index selected: "+list_index);
    }//GEN-LAST:event_list_snippetMouseClicked

    private void menu_showdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_showdetailsActionPerformed
        if ( list_index != -1 ){
            new details_window(this,true,container.get(list_index));
            load_list();
        }
    }//GEN-LAST:event_menu_showdetailsActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label_add;
    private javax.swing.JList<String> list_snippet;
    private javax.swing.JMenuItem menu_copysnippet;
    private javax.swing.JMenu menu_options;
    private javax.swing.JMenuItem menu_remove;
    private javax.swing.JMenuItem menu_sendbyemail;
    private javax.swing.JMenuItem menu_showdetails;
    private javax.swing.JTextArea text_newsnippet;
    // End of variables declaration//GEN-END:variables
}
